unit Model.CadastroLookup;

interface

uses
  System.SysUtils, System.Classes, FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf,
  FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt, Data.DB, FireDAC.Comp.DataSet, FireDAC.Comp.Client;

type
  TdmCadastroLookup = class(TDataModule)
    qryUFLookup: TFDQuery;
    srcUFLookup: TDataSource;
    srcCidadeLookup: TDataSource;
    srcEmpresaLookup: TDataSource;
    srcTitularLookup: TDataSource;
    qryCidadeLookup: TFDQuery;
    qryEmpresaLookup: TFDQuery;
    qryTitularLookup: TFDQuery;
    procedure DataModuleCreate(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  dmCadastroLookup: TdmCadastroLookup;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

{$R *.dfm}

procedure TdmCadastroLookup.DataModuleCreate(Sender: TObject);
begin
  for Var I := 0 to Pred(ComponentCount) do
    if Components[I] is TFDQuery then
      (Components[I] as TFDQuery).Open;
end;

end.
