unit View.Principal.Helper;

interface

uses
  Vcl.Menus;

type
  TMenuItemHelper = class helper for TMenuItem
    function InformarTitulo: String;
  private
    function GetTable: string;
    procedure SetTable(const Value: string);
  protected
    function GetForm: string;
    procedure SetForm(const Value: string);
  public
    property Form: string Read GetForm write SetForm;
    property Table: string Read GetTable write SetTable;
  end;

implementation

uses
  System.Generics.Collections, System.Classes, SysUtils;

const
  ATALHO_TECLADO_MENU = '&';

var
  LForm: TDictionary<TComponent, string>;
  LTable: TDictionary<TComponent, string>;

{ TMenuItemHelper }

function TMenuItemHelper.InformarTitulo: String;
begin
  Result := StringReplace(Caption, ATALHO_TECLADO_MENU, EmptyStr, [rfReplaceAll]);
end;

function TMenuItemHelper.GetForm: string;
begin
  if LForm.ContainsKey(self) then
    Result := LForm.Items[self];
end;

function TMenuItemHelper.GetTable: string;
begin
  if LTable.ContainsKey(self) then
    Result := LTable.Items[self];
end;

procedure TMenuItemHelper.SetForm(const Value: string);
begin
  LForm.Add(self, Value);
end;

procedure TMenuItemHelper.SetTable(const Value: string);
begin
  LTable.Add(self, Value);
end;

initialization

  LForm := TDictionary<TComponent, string>.Create;
  LTable := TDictionary<TComponent, string>.Create;

finalization

  LForm.free;
  LTable.free;

end.
